---
title: "CPU and GPU Performance"
author: "Leif Harvey"
format: 
  html:
    embed-resources: true
---

```{r}
#| warning: false
#| echo: false

library(ggplot2)
library(tidyverse)
library(plotly)
library(broom)
library(readr)
library(plotly)

chips_origional <- read_csv("chip_dataset.csv")

chips <- chips_origional |> rename(transistors = `Transistors (million)`, die_size = `Die Size (mm^2)`, freq = `Freq (MHz)`, TDP = `TDP (W)`, process_size = `Process Size (nm)`, date = `Release Date`, fp16gflops = `FP16 GFLOPS`, fp32gflops = `FP32 GFLOPS`, fp64gflops = `FP64 GFLOPS`)

```

# Abstract

 `<brief introduction>`
 `<report major findings here>`


# Introduction

The project will examine performance of CPU and GPU chips made since 2000. The data set includes chips made by multiple vendors such as Intel, NVIDIA, ATI, and AMD. Other variables include the process size, thermal design power, die size, number of transistors, frequency, foundry, and GFLOPS. GFLOPS is a way to compare the performance of graphics cards and stands for a billion floating point operations per second.

```{r}
chips_origional |> slice(1:5) |> select(2:5, 9:11)
```

## Feature Exploration

### Chip Type

The data set is split roughly even with $2192$ CPUs and $2662$ GPUs.
```{r}
chips_origional |> group_by(Type) |> summarise(Count = n())
```


### Foundries

The data set contains chips made from nine different foundries, with TSMC and Intel making the vast majority of the chips. $866$ chips didn't have a foundry listed.
```{r}
chips_origional |> group_by(Foundry) |> summarise(Count = n()) |> arrange(desc(Count))
```


### Vendors

The data set contains chips from four vendors: AMD, Intel, NVIDIA, and ATI. Only $64$ of the chips were made from a different, unspecified vendor.
```{r}
chips_origional |> group_by(Vendor) |> summarise(Count = n()) |> arrange(desc(Count))
```


### Transistors

The average number of transistors in a chip is $1929.922$ million, but the median number is $624$ million. The range is from $8$ million up to $54.2$ billion. The graph shows an extreme right skew.

```{r}
#| warning: false

ggplot(data = chips, aes(x = transistors)) + 
  geom_histogram(fill = "lightblue", color = "darkblue") +
  theme_minimal() + 
  ylab("Number of Processors") + 
  xlab("Transistors (millions)")

no_na_t <- chips |> select(transistors) |> filter(!is.na(transistors))
no_na_t |> tidy()
```


### Frequency

The average processor frequency is $1484.406$ MHz, and the median frequency is $1073.5$ MHz. The range is from $100$ MHz up to $4700$ MHz. The graph shows a right skew in the data with a peak at around $500$ MHz.

```{r}
#| warning: false

ggplot(data = chips, aes(x = freq)) + 
  geom_histogram(fill = "lightblue", color = "darkblue") +
  theme_minimal() + 
  ylab("Number of Processors") + 
  xlab("Frequency (MHz)")

no_na_f <- chips |> select(freq) |> filter(!is.na(freq))
no_na_f |> tidy()
```


### Processor Size

The average processor size is $55.1$ nm, and the median size is $40$ nm. The range is from $0$ nm up to $250$ nm. The graph shows a right skew in the data with a peak at around $25$ nm.

```{r}
#| warning: false

ggplot(data = chips, aes(x = process_size)) + 
  geom_histogram(fill = "lightblue", color = "darkblue") +
  theme_minimal() + 
  ylab("Number of Processors") + 
  xlab("Processor Size (nm)")

no_na_p <- chips |> select(process_size) |> filter(!is.na(process_size))
no_na_p |> tidy()
```


This project will focus on determining which foundries and vendors 


## Questions of Interest:

Are some foundries clearly producing better performing products than others?

Are some vendors clearly producing better performing products than others?

Can we see Moore's Law in the data?

What variables seem to play a role in a high  fp32gflop?

Can we create a model to predict GFLOPS?



# Is there a Best Foundry?

One potential issue when looking a foundries and performance is that the foundries have partnerships with certain vendors, which may be producing better or worse products. Lets go ahead and look anyway with this in mind. The plot is interactive and shows the vendor when the points are hovered over.

```{r}
gpu <- chips |> filter(!is.na(fp32gflops))

foundry_glops <- ggplot(data = gpu, aes(x = Foundry, y = fp32gflops, label = Vendor)) + 
  geom_jitter(alpha = 0.5) + 
  theme_minimal() + 
  ylab("FP32GFLOPS") + 
  labs(title = "Foundry vs FP-32-GFLOPS",
       caption = "GFLOPS represents Billions of Floating Point Operations Per Second")

ggplotly(foundry_glops, tooltip = "label")
```

It appears as Samsung is a proxy for NVIDIA as it mainly produces NVIDIA GPUs. TSMC produces products for everyone but Intel, but I'd say Intel mainly focuses on CPUs and many of the GPUs are just integrated ones. GF also has some high performing chips, which are all AMD chips.




```{r}
#| code: false

no_na_g <- chips |> filter(!is.na(fp32gflops))

ggplot(data = no_na_g, aes(x = transistors, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = die_size, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = process_size, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = Foundry, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = Vendor, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = TDP, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = freq, y = fp32gflops)) + geom_point() + theme_minimal()

ggplot(data = no_na_g, aes(x = date, y = fp32gflops)) + geom_point() + theme_minimal()
```